package com.example.hp_pavilion.realapppresensi.storage

import com.example.hp_pavilion.realapppresensi.models.data

import android.content.Context

import com.example.hp_pavilion.realapppresensi.models.presensi


class SharedPrefManager(val context: Context) {

    val isLoggedIn: Boolean
        get() {
            val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
            return sharedPreferences.getInt("id", -1) != -1
        }

    val data: Int
        get() {
            val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
            return sharedPreferences.getInt("id", -1)
                    //sharedPreferences.getString("nama_pegawai", null),
                   // sharedPreferences.getString("no_hp", null),
                  //  sharedPreferences.getString("jabatan", null),
                   // sharedPreferences.getString("username", null)

        }
    val nama: String
        get() {
            val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
            return sharedPreferences.getString("nama_pegawai", null)
        }

    val jabatan: String
        get() {
            val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
            return sharedPreferences.getString("jabatan", null)
        }








    fun saveUser(data: data) {

        val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
        val editor = sharedPreferences.edit()

        editor.putInt("id", data.id)
        editor.putString("nama_pegawai", data.nama_pegawai)
        editor.putString("no_hp", data.no_hp)
        editor.putString("jabatan", data.jabatan)
        editor.putString("email", data.email)


        editor.apply()


    }





        fun clear() {
        val sharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
        val editor = sharedPreferences.edit()
        editor.clear()
        editor.apply()
    }

    companion object {

        private val SHARED_PREF_NAME = "my_shared_preff"
        private val STATUS_ABSEN = "status_absen"

        private var mInstance: SharedPrefManager? = null


        @Synchronized
        fun getInstance(mCtx: Context): SharedPrefManager {
            if (mInstance == null) {
                mInstance = SharedPrefManager(mCtx)
            }
            return mInstance as SharedPrefManager
        }
    }

}