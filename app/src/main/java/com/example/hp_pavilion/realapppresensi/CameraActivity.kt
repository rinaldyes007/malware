package com.example.hp_pavilion.realapppresensi

import android.content.Intent
import android.graphics.Bitmap
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.provider.MediaStore
import android.text.Editable
import android.util.Base64
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import com.example.hp_pavilion.realapppresensi.R.id.*
import com.example.hp_pavilion.realapppresensi.api.RetrofitClient
import com.example.hp_pavilion.realapppresensi.models.DefaultResponse
import com.example.hp_pavilion.realapppresensi.models.data
import com.example.hp_pavilion.realapppresensi.models.presensi
import com.example.hp_pavilion.realapppresensi.storage.SharedPrefManager
import kotlinx.android.synthetic.main.activity_camera.*
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import java.io.ByteArrayOutputStream
import java.util.*


class CameraActivity : AppCompatActivity() {

    private lateinit var button: Button
    private lateinit var edt_user : EditText
    lateinit var bitmap: Bitmap
    var calendar: Calendar = Calendar.getInstance()


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_camera)


        edt_user = findViewById(R.id.userrr_id)
        var jamm = calendar.get(Calendar.HOUR)

        if (jamm == 0) {
            btnCamera.visibility = View.VISIBLE
            send.visibility = View.VISIBLE
        }


        button = findViewById(R.id.btnCamera)
        btnCamera.setOnClickListener{
            var i = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
            startActivityForResult(i,123)
            btnCamera.visibility = View.INVISIBLE
        }

        button = findViewById(R.id.send)
        send.setOnClickListener{

            val sharedPrefManager = SharedPrefManager(this)
            val id = sharedPrefManager.data
            val id2 = id.toString()

            val status = statuss.text.toString().trim()
            val foto = imageResult(bitmap)











            RetrofitClient.instance.insertPresensis(id2, status, foto)
                    .enqueue(object: Callback<DefaultResponse>{
                        override fun onFailure(call: Call<DefaultResponse>, t: Throwable) {
                            Toast.makeText(applicationContext, "salah", Toast.LENGTH_LONG).show()
                        }

                        override fun onResponse(call: Call<DefaultResponse>, response: Response<DefaultResponse>) {
                            Toast.makeText(applicationContext, "sukses", Toast.LENGTH_LONG).show()
                            send.visibility = View.INVISIBLE
                            //SharedPrefManager.getInstance(applicationContext).savePresensi(response.body()?.presensis!!)
                            val intent = Intent(applicationContext, MenuActivity::class.java)
                            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
                            startActivity(intent)
                        }

                    })



        }
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent) {
        super.onActivityResult(requestCode, resultCode, data)
        if (requestCode==123) {
            bitmap = data.extras.get("data") as Bitmap
            imageView.setImageBitmap(bitmap)
        }
    }

        fun imageResult(bitmap: Bitmap): String {
        val baos = ByteArrayOutputStream()
        bitmap.compress(Bitmap.CompressFormat.JPEG, 90, baos)
        val imgByte = baos.toByteArray()

        val imgString = Base64.encodeToString(imgByte, Base64.NO_WRAP)

        return imgString

    }


}
